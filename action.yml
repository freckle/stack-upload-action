name: Stack Upload
description: Run stack-sdist and upload the result to Hackage
inputs:
  working-directory:
    description: "Working directory for run commands"
    required: true
    default: .
  pvp-bounds:
    description: "--pvp-bounds to use: none, lower (default), upper, or both"
    required: true
    default: lower
outputs: {}
runs:
  using: composite
  steps:
    - if: ${{ inputs.pvp-bounds == 'lower' }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        if [[ -n "$STACK_YAML" ]]; then
          exit 0 # respect
        fi

        read -r stack_yaml < \
          <(find . -name 'stack-lts-*.yaml' | sort -V; echo stack.yaml)

        echo "Setting STACK_YAML=$stack_yaml, to inform --pvp-bounds=lower"
        echo "STACK_YAML=$stack_yaml" >> '${{ github.env }}'

    - name: Release
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        if [ -z "$HACKAGE_API_KEY" ]; then
          echo "You must set $HACKAGE_API_KEY in the environment" >&2
          exit 1
        fi

        tmp=$(mktemp -d)
        stack sdist --tar-dir "$tmp" --pvp-bounds ${{ inputs.pvp-bounds }} .
        archive=$(find "$tmp" -name '*.tar.gz' -print)

        if [ -z "$archive" ]; then
          echo "stack-sdist did not produce an archive?" >&2
          exit 1
        fi

        echo "Uploading to Hackage"
        http_code=$(
          curl \
            --silent \
            --header "Accept: text/plain" \
            --header "Authorization: X-ApiKey $HACKAGE_API_KEY" \
            --form "package=@$archive" \
            --output /dev/stderr \
            --write-out '%{http_code}' \
            https://hackage.haskell.org/packages/
        )

        echo "Upload complete ($http_code)"

        if (( http_code >= 400 )); then
          echo "Upload not successful: $http_code"
          exit 1
        fi
